{"ast":null,"code":"import _slicedToArray from \"/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/src/components/LogCardDetail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport book from \"/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/src/assets/img/book icon.png\";\nimport podcast from \"/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/src/assets/img/podcast icon.png\";\nimport ThoughtsButton from \"./ThoughtsButton\";\nimport { Card } from \"semantic-ui-react\";\nfunction LogCardDetail(_ref) {\n  var mode = _ref.mode,\n    logs = _ref.logs;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    logsToDisplay = _useState2[0],\n    setLogsToDisplay = _useState2[1];\n  var _useParams = useParams(),\n    id = _useParams.id;\n  useEffect(function () {\n    fetch(\"http://localhost:3000/reflections/\".concat(id)).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return setLogsToDisplay(data);\n    });\n  }, [id]);\n  if (!logsToDisplay) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 32\n    }\n  }, \" Loading . . . \");\n  var title = logsToDisplay.title,\n    author = logsToDisplay.author,\n    url = logsToDisplay.url,\n    genre = logsToDisplay.genre,\n    category = logsToDisplay.category,\n    thoughts = logsToDisplay.thoughts;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"return (\", /*#__PURE__*/React.createElement(Card, {\n    key: log.id,\n    className: \"card\",\n    color: mode ? \"orange\" : \"purple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: log.category,\n    src: log.category === \"Book\" ? book : podcast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, log.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, \"Author:\"), \" \", log.author, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: log.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Link\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, \"Genre:\"), \" \", log.genre, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(ThoughtsButton, {\n    thoughts: log.thoughts,\n    mode: mode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })), \")\");\n}\nexport default LogCardDetail;","map":{"version":3,"names":["React","useEffect","useState","useParams","book","podcast","ThoughtsButton","Card","LogCardDetail","mode","logs","logsToDisplay","setLogsToDisplay","id","fetch","then","res","json","data","title","author","url","genre","category","thoughts","log"],"sources":["/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/src/components/LogCardDetail.js"],"sourcesContent":["import React, {  useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport book from \"/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/src/assets/img/book icon.png\";\nimport podcast from \"/Users/jumiyoon/Development/code/phase-2/phase-2-final-project/my-app/src/assets/img/podcast icon.png\";\nimport ThoughtsButton from \"./ThoughtsButton\";\nimport { Card } from \"semantic-ui-react\";\n\n\nfunction LogCardDetail( { mode, logs }){\n    const [logsToDisplay, setLogsToDisplay] = useState([]);\n    let { id } = useParams();\n    \n    useEffect(() => {\n        fetch(`http://localhost:3000/reflections/${id}`)\n            .then((res) => res.json())\n            .then((data) => setLogsToDisplay(data) )\n    }, [id])\n\n    \n    if (!logsToDisplay) return <h2> Loading . . . </h2>\n\n    const { title, author, url, genre, category, thoughts } = logsToDisplay\n\n    return ( \n        <div>\n        return (<Card key={log.id} className=\"card\" color={mode ? \"orange\" : \"purple\"}>\n                    <img alt={log.category} src={log.category === \"Book\" ? book : podcast}/>\n                    <h2>{log.title}</h2>\n                    <p>\n                        <strong>Author:</strong> {log.author} \n                        <br />\n                        <a href={log.url}>Link</a>\n                        <br />\n                        <strong>Genre:</strong> {log.genre}\n                        <br />\n                    </p>\n                    <ThoughtsButton thoughts={log.thoughts} mode={mode} />\n            </Card>)\n        </div>\n    )\n}\n\nexport default LogCardDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAKC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,oGAAoG;AACrH,OAAOC,OAAO,MAAM,uGAAuG;AAC3H,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAASC,IAAI,QAAQ,mBAAmB;AAGxC,SAASC,aAAa,OAAiB;EAAA,IAAbC,IAAI,QAAJA,IAAI;IAAEC,IAAI,QAAJA,IAAI;EAAA,gBACUR,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA/CS,aAAa;IAAEC,gBAAgB;EAAA,iBACzBT,SAAS,EAAE;IAAlBU,EAAE,cAAFA,EAAE;EAERZ,SAAS,CAAC,YAAM;IACZa,KAAK,6CAAsCD,EAAE,EAAG,CAC3CE,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;IAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,IAAI;MAAA,OAAKN,gBAAgB,CAACM,IAAI,CAAC;IAAA,EAAE;EAChD,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAGR,IAAI,CAACF,aAAa,EAAE,oBAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,iBAAe,CAAK;EAAA,IAE3CQ,KAAK,GAA6CR,aAAa,CAA/DQ,KAAK;IAAEC,MAAM,GAAqCT,aAAa,CAAxDS,MAAM;IAAEC,GAAG,GAAgCV,aAAa,CAAhDU,GAAG;IAAEC,KAAK,GAAyBX,aAAa,CAA3CW,KAAK;IAAEC,QAAQ,GAAeZ,aAAa,CAApCY,QAAQ;IAAEC,QAAQ,GAAKb,aAAa,CAA1Ba,QAAQ;EAErD,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAK,UACG,mCAAC,IAAI;IAAC,GAAG,EAAEC,GAAG,CAACZ,EAAG;IAAC,SAAS,EAAC,MAAM;IAAC,KAAK,EAAEJ,IAAI,GAAG,QAAQ,GAAG,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAClE;IAAK,GAAG,EAAEgB,GAAG,CAACF,QAAS;IAAC,GAAG,EAAEE,GAAG,CAACF,QAAQ,KAAK,MAAM,GAAGnB,IAAI,GAAGC,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACxE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAKoB,GAAG,CAACN,KAAK,CAAM,eACpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,SAAO,CAAS,KAAC,EAACM,GAAG,CAACL,MAAM,eACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,eACN;IAAG,IAAI,EAAEK,GAAG,CAACJ,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,MAAI,CAAI,eAC1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAQ,QAAM,CAAS,KAAC,EAACI,GAAG,CAACH,KAAK,eAClC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,CACN,eACJ,oBAAC,cAAc;IAAC,QAAQ,EAAEG,GAAG,CAACD,QAAS;IAAC,IAAI,EAAEf,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACvD,KACX,CAAM;AAEd;AAEA,eAAeD,aAAa"},"metadata":{},"sourceType":"module"}